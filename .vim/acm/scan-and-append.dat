//ll
typedef long long ll;
//u64
typedef long long unsigned u64;
//u32
typedef long unsigned u32;
//checkMax(
template<class T> void inline checkMax(T& a, T b)
{
	if(a < b){
		a = b;
	}
};
//checkMin(
template<class T> void inline checkMin(T& a, T b)
{
	if(b < a){
		a = b;
	}
};
//REP
#define REP(i,n) for(int n_##__LINE__ = (n), i = 0; i < n_##__LINE__; ++i)
//FORI
#define FORI(it,v) for(__typeof__((v).begin()) it = (v).begin(); it != (v).end(); ++it)
//FORE
#define FORE(elem,v)\
	for(__typeof__(v.begin()) _it = v.begin(); _it != v.end(); ++_it)\
for(int _once=1, _done=0; _once; (!_done) ? (_it=v.end(), --_it) : _it )\
for(__typeof__(*_it) & elem = * _it; _once && !(_once=0); _done=1)
//FORPAIR (
#define FORPAIR(a, b, v)\
	for(__typeof__(v.begin()) _it = v.begin(); _it != v.end(); ++_it)\
for(bool _once1 = true, _once2 = true, _done = false; _once1 && _once2; (!_done) ? (_it=v.end(), --_it) : _it )\
for(__typeof__(_it->first) & a = _it->first; _once1 && !(_once1 = false); )\
for(__typeof__(_it->second) & b = _it->second; _once2 && !(_once2 = false); _done = true)
//TWO(
#define TWO(x) (1 << (x))
//TWOLL(
#define TWOLL(x) (1LL << (x))
//DBG(
#define DBG(a) do{std::cerr << #a << ": " << (a) << std::endl;}while(0)
//DBG_(
#define DBG_(a) do{std::cerr << #a << ": " << (a) << ' ';}while(0)
//ALL(
#define ALL(a) (a).begin(), (a).end()
//SZ(
#define SZ(a) ((int)(a).size())
//_getint(
inline int _getint(int n = 0)
{
	char c;
	for(c = getchar();!isdigit(c);c = getchar());
	for(;isdigit(c);c = getchar()){
		n = (n << 3) + (n << 1) + c - '0';
	}
	return n;
}
//cerr|cout|cin
#include <iostream>
//ofstream|fstream|ifstream
#include <fstream>
//sort|min|max|permutation|unique|__gcd|reverse|rotate|min_element|max_element|partial_sort|nth_element|pair|labs
#include <algorithm>
//isdigit
#include <cctype>
//bitset
#include <bitset>
//string
#include <string>
//valarray
#include <valarray>
//rand|atoi
#include <cstdlib>
//assert
#include <cassert>
//strlen|memset|memcpy
#include <cstring>
//scanf|printf|getchar|puts|gets
#include <cstdio>
//queue
#include <queue>
//set
#include <set>
//map
#include <map>
//sin\(|cos|tan|pow|sqrt|exp|log|fabs
#include <cmath>
//complex
#include <complex>
//vector
#include <vector>
//deque
#include <deque>
//accumulate|partial_sum
#include <numeric>
//iterator
#include <iterator>
//stringstream
#include <sstream>
//iostream|map|bitset|algorithm|vector|<string>|complex|numeric|cmath
using namespace std;
//__power\(
#include <ext/numeric>
//__power
using namespace __gnu_cxx;
//likely(
#ifndef likely
#define likely(x) __builtin_expect((x), 1)
#endif
//unlikely(
#ifndef unlikely
#define unlikely(x) __builtin_expect((x), 0)
#endif
// vim: set filetype=cpp:
