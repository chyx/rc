# Read File Into Vector
snippet readfile
	std::vector<char> v;
	if (FILE *${2:fp} = fopen(${1:"filename"}, "r")) {
		char buf[1024];
		while (size_t len = fread(buf, 1, sizeof(buf), $2))
			v.insert(v.end(), buf, buf + len);
		fclose($2);
	}${3}
# std::map
snippet map
	std::map<${1:key}, ${2:value}> map${3};
# std::vector
snippet vector
	std::vector<${1:char}> v${2};
# Namespace
snippet ns
	namespace ${1:`Filename('', 'my')`} {
		${2}
	} /* $1 */
# Class
snippet cl
	class ${1:`Filename('$1_t', 'name')`} {
	public:
		$1 (${2:arguments});
		virtual ~$1 ();
	
	private:
		${3:/* data */}
	};

snippet gettime
	/***********************Time management***************************************/
	#include <time.h>
	#include <sys/time.h>
	double gettime(){
	#ifdef __linux__
		struct timeval t;
		gettimeofday(&t, NULL); 
		return t.tv_sec + t.tv_usec/1000000.0;
	#else 
		return clock() / (double)CLOCKS_PER_SEC;
	#endif
	}
	double startTime;
	/******************************************************************************/



