#take
snippet take
	//take ${1:n} ${2:a} + ${3:b} * i
	vector<int> v_$1;
	for(int i = 0; i < n; ++i)v_$1.push_back( ($2) + ($3) * i );
	${4}
snippet @
	// ${1:} @ ${2:}
	$2 $1
snippet +++
	(${1:x}) * 10 + (${2:y})${3}
snippet `
	// ${1:a} ${2:f} ${3:b}
	$2($1,$3)${4}
snippet mapi
	// map (\i -> ${1:i * i}) ${2:n} => ${3:v}
	vector<int> v$3;
	for(int i = 0; i < $2; ++i){
		int fx = $1;
		v$3.push_back( fx );
	}
	${4}
snippet filteri
	// filter (${1:arr[i]>=0}) ${2:arr} ${3:n} => ${4:v}
	vector<int> $4;
	for(int i = 0; i < $3; ++i) if( $1 ){
		$4.push_back( $2[i] );
	}
	${5}
snippet =2
	// ${1:}, ${2:} = ${3:}, ${4:}
	$1 = $3;
	$2 = $4;
	${5}
snippet =3
	// ${1:}, ${2:}, ${3:} = ${4:}, ${5:}, ${6:}
	$1 = $4;
	$2 = $5;
	$3 = $6;
	${7}
snippet =4
	// ${1:}, ${2:}, ${3:}, ${4:} = ${5:}, ${6:}, ${7:}, ${8:}
	$1 = $5;
	$2 = $6;
	$3 = $7;
	$4 = $8;
	${9}
snippet |2
	// ${1:v}
	//	| ${2:cond1} = ${3:v1}
	// 	| ${4:cond2} = ${5:v2}
	// 	| otherwise = ${6:v3}
	if( $2 ){
		$1 = $3;
	}else if( $4 ){
		$1 = $5;
	}else{
		$1 = $6;
	}
	${7}
snippet |1
	// ${1:v}
	//	| ${2:cond1} = ${3:v1}
	// 	| otherwise = ${4:v3}
	if( $2 ){
		$1 = $3;
	}else{
		$1 = $4;
	}
	${5}
snippet sq
	(${1:x})*($1)${2}
snippet backup
	${1:int} o${2:x} = $2;
	${3}
snippet each
	Rep(${2:i$1},${1:arr}.size()){
		// elem => arr[$2]
		${3}
	}
